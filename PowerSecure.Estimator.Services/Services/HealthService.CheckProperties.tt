<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="EnvDTE" #>
<#@ assembly name="Newtonsoft.Json" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Text.RegularExpressions" #>
<#@ import namespace="EnvDTE" #>
<#@ import namespace="Newtonsoft.Json.Linq" #>
<#@ output extension=".cs" #>
<#
	IServiceProvider serviceProvider = (IServiceProvider)this.Host;
    EnvDTE.DTE dte = serviceProvider.GetService(typeof(EnvDTE.DTE)) as EnvDTE.DTE;
	var project = dte.Solution.FindProjectItem(this.Host.TemplateFile).ContainingProject as EnvDTE.Project;
	string root = Host.ResolvePath("..");
	JObject jObj;
	using(StreamReader reader = new StreamReader(Path.Combine(root,"local.settings.json")))
	{
		jObj = JObject.Parse(reader.ReadToEnd());
	}
#>
using System;
using System.Collections.Generic;

namespace PowerSecure.Estimator.Services.Services
{
	public partial class HealthService
	{
		public static IEnumerable<string> MissingPropertiesIterator() 
		{
<#
	foreach(string propertyName in ((JObject)jObj["Values"]).Properties().Where(o => o.Name != "AzureWebJobsStorage" && o.Name != "FUNCTIONS_WORKER_RUNTIME").Select(o => o.Name))
	{
		WriteLine($"\t\t\tif (Environment.GetEnvironmentVariable(\"{propertyName}\") == null) yield return \"{propertyName}\";");
	}
#>
		}
	}
}